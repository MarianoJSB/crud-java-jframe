package cmf_engines_interface;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import com.mysql.jdbc.Connection;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author arieldiaz - marianoaguiar - aaronavila
 */
public class CMF_Engines_Add_Product extends javax.swing.JFrame {

    PreparedStatement ps;
    ResultSet rs;
    
    private int anchoOriginalBoton;
    private int altoOriginalBoton;

    // Método para inicializar las dimensiones originales del botón
    private void inicializarDimensionesOriginales() {
        anchoOriginalBoton = buttonSeleccionarImagen.getWidth();
        altoOriginalBoton = buttonSeleccionarImagen.getHeight();
    }
    
    /**
     * Creates new form CMF_Engines_Add_Product
     */
    public CMF_Engines_Add_Product() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cajaDescripcion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cajaBuscarProducto = new javax.swing.JTextField();
        cajaNombre = new javax.swing.JTextField();
        cajaCantStock = new javax.swing.JTextField();
        cajaPrecio = new javax.swing.JTextField();
        cajaImagen = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboColor = new javax.swing.JComboBox<>();
        comboCategoria = new javax.swing.JComboBox<>();
        comboEstado = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cajaIdUsuarioReferenciado = new javax.swing.JTextField();
        Limpiar = new javax.swing.JButton();
        buttonSeleccionarImagen = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(15, 12, 12));

        jLabel1.setBackground(new java.awt.Color(245, 245, 250));
        jLabel1.setForeground(new java.awt.Color(245, 245, 250));
        jLabel1.setText("Buscar producto");

        cajaDescripcion.setBackground(new java.awt.Color(245, 245, 250));
        cajaDescripcion.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        cajaDescripcion.setForeground(new java.awt.Color(15, 12, 12));
        cajaDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaDescripcionActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(26, 24, 24));
        jButton1.setForeground(new java.awt.Color(245, 245, 250));
        jButton1.setText("Buscar");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setBorderPainted(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setMargin(new java.awt.Insets(14, 14, 14, 14));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(245, 245, 250));
        jLabel3.setForeground(new java.awt.Color(245, 245, 250));
        jLabel3.setText("Descripción");

        jLabel4.setBackground(new java.awt.Color(245, 245, 250));
        jLabel4.setForeground(new java.awt.Color(245, 245, 250));
        jLabel4.setText("Nombre");

        jLabel5.setBackground(new java.awt.Color(245, 245, 250));
        jLabel5.setForeground(new java.awt.Color(245, 245, 250));
        jLabel5.setText("Precio");

        jLabel6.setBackground(new java.awt.Color(245, 245, 250));
        jLabel6.setForeground(new java.awt.Color(245, 245, 250));
        jLabel6.setText("Cant. Stock");

        jLabel7.setBackground(new java.awt.Color(245, 245, 250));
        jLabel7.setForeground(new java.awt.Color(245, 245, 250));
        jLabel7.setText("Imagen");

        cajaBuscarProducto.setBackground(new java.awt.Color(245, 245, 250));
        cajaBuscarProducto.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        cajaBuscarProducto.setForeground(new java.awt.Color(15, 12, 12));
        cajaBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaBuscarProductoActionPerformed(evt);
            }
        });

        cajaNombre.setBackground(new java.awt.Color(245, 245, 250));
        cajaNombre.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        cajaNombre.setForeground(new java.awt.Color(15, 12, 12));
        cajaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaNombreActionPerformed(evt);
            }
        });

        cajaCantStock.setBackground(new java.awt.Color(245, 245, 250));
        cajaCantStock.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        cajaCantStock.setForeground(new java.awt.Color(15, 12, 12));
        cajaCantStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaCantStockActionPerformed(evt);
            }
        });

        cajaPrecio.setBackground(new java.awt.Color(245, 245, 250));
        cajaPrecio.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        cajaPrecio.setForeground(new java.awt.Color(15, 12, 12));
        cajaPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaPrecioActionPerformed(evt);
            }
        });

        cajaImagen.setBackground(new java.awt.Color(245, 245, 250));
        cajaImagen.setFont(new java.awt.Font("Cantarell", 0, 12)); // NOI18N
        cajaImagen.setForeground(new java.awt.Color(15, 12, 12));
        cajaImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaImagenActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(5, 7, 10));
        jButton2.setForeground(new java.awt.Color(245, 245, 250));
        jButton2.setText("Eliminar");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.setBorderPainted(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setMargin(new java.awt.Insets(14, 14, 14, 14));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(26, 24, 24));
        jButton3.setForeground(new java.awt.Color(245, 245, 250));
        jButton3.setText("Modificar");
        jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton3.setBorderPainted(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.setMargin(new java.awt.Insets(14, 14, 14, 14));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(26, 24, 24));
        jButton4.setForeground(new java.awt.Color(245, 245, 250));
        jButton4.setText("Añadir");
        jButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton4.setBorderPainted(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setMargin(new java.awt.Insets(14, 14, 14, 14));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(245, 245, 250));
        jLabel10.setForeground(new java.awt.Color(245, 245, 250));
        jLabel10.setText("Categoría");

        jLabel11.setBackground(new java.awt.Color(245, 245, 250));
        jLabel11.setForeground(new java.awt.Color(245, 245, 250));
        jLabel11.setText("Color");

        jLabel12.setBackground(new java.awt.Color(245, 245, 250));
        jLabel12.setForeground(new java.awt.Color(245, 245, 250));
        jLabel12.setText("Estado");

        comboColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Azul", "Rojo", "Verde", "Amarillo", "Violeta", "Gris", "Negro", "Blanco", "Naranja", "Varios", "Ninguno" }));

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auto", "Moto", "Formula", "Varias", "Ninguno" }));

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nuevo", "Usado", "Ninguno" }));

        jLabel13.setBackground(new java.awt.Color(245, 245, 250));
        jLabel13.setForeground(new java.awt.Color(245, 245, 250));
        jLabel13.setText("ID Usuario referenciado");

        cajaIdUsuarioReferenciado.setBackground(new java.awt.Color(245, 245, 250));
        cajaIdUsuarioReferenciado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaIdUsuarioReferenciadoActionPerformed(evt);
            }
        });

        Limpiar.setBackground(new java.awt.Color(26, 24, 24));
        Limpiar.setForeground(new java.awt.Color(245, 245, 250));
        Limpiar.setText("Limpiar");
        Limpiar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Limpiar.setBorderPainted(false);
        Limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Limpiar.setMargin(new java.awt.Insets(14, 14, 14, 14));
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        buttonSeleccionarImagen.setText("Seleccionar imagen");
        buttonSeleccionarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeleccionarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(51, 51, 51)
                        .addComponent(cajaBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cajaCantStock, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cajaDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cajaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cajaPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cajaImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSeleccionarImagen))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(comboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cajaIdUsuarioReferenciado, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(366, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(364, 364, 364))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cajaBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(596, 596, 596)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(comboColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(cajaIdUsuarioReferenciado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cajaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cajaDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cajaPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cajaCantStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(cajaImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addComponent(buttonSeleccionarImagen)))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addComponent(jLabel2)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void limpiarCaja() {
        System.out.println(anchoOriginalBoton);
        System.out.println(anchoOriginalBoton);
        cajaNombre.setText(null);
        cajaDescripcion.setText(null);
        cajaPrecio.setText(null);
        cajaCantStock.setText(null);
        cajaImagen.setText(null);
        buttonSeleccionarImagen.setIcon(null);
        buttonSeleccionarImagen.setText("Seleccionar imagen");
        buttonSeleccionarImagen.setSize(138, 28);
        comboCategoria.setSelectedIndex(0);
        comboColor.setSelectedIndex(0);
        comboEstado.setSelectedIndex(0);
        cajaIdUsuarioReferenciado.setText(null);
    }
    
    private boolean esArchivoDeImagen(File archivo) {
        String nombreArchivo = archivo.getName().toLowerCase();
        return nombreArchivo.endsWith(".jpg") || nombreArchivo.endsWith(".jpeg") || nombreArchivo.endsWith(".png") || nombreArchivo.endsWith(".gif");
    }
    
    private Image getScaledImage(File archivo, int ancho, int alto) {
        try {
            BufferedImage img = ImageIO.read(archivo);
            Image imagenEscalada = img.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
            return imagenEscalada;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    public static boolean ventanaDeSeleccion(String mensaje) {
        int opcion = JOptionPane.showConfirmDialog(
                null,             // Componente padre (en este caso, ninguno)
                mensaje,          // Mensaje a mostrar
                "Confirmación",   // Título de la ventana
                JOptionPane.YES_NO_OPTION);  // Tipo de botones (Sí/No)

        // Devuelve true si el usuario seleccionó "Sí", false si seleccionó "No" o cerró la ventana
        return opcion == JOptionPane.YES_OPTION;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Conexion con = new Conexion();
            Connection conexion = con.getConnection();
            ps = conexion.prepareStatement("SELECT * FROM articulos WHERE id_articulo = ?");
            ps.setString(1, cajaBuscarProducto.getText());
            rs = ps.executeQuery();
            
            if(rs.next()) {
                cajaNombre.setText(rs.getString("nombre"));
                cajaDescripcion.setText(rs.getString("descripcion"));
                cajaPrecio.setText(String.valueOf(rs.getInt("precio")));
                cajaCantStock.setText(String.valueOf(rs.getInt("stock")));
                
                
                String rutaImagen = rs.getString("imagen");
                System.out.println("Ruta de la imagen: " + rutaImagen);
                if (rutaImagen != null && !rutaImagen.isEmpty()) {
                    
                    String tituloImagen = rs.getString("imagen");
                    cajaImagen.setText(tituloImagen);
                    // Crear un ImageIcon desde la ruta de la imagen
                    ImageIcon imagenIcon = new ImageIcon(rutaImagen);

                    // Obtener las dimensiones originales de la imagen
                    int anchoOriginal = imagenIcon.getIconWidth();
                    int altoOriginal = imagenIcon.getIconHeight();

                    // Calcular las nuevas dimensiones para la imagen escalada
                    int nuevoAncho = 50; // ajusta según tus necesidades
                    int nuevoAlto = 50;

                    // Escalar la imagen a las nuevas dimensiones
                    Image imagenEscalada = imagenIcon.getImage().getScaledInstance(nuevoAncho, nuevoAlto, Image.SCALE_SMOOTH);

                    // Crear un ImageIcon con la imagen escalada
                    ImageIcon imagenEscaladaIcon = new ImageIcon(imagenEscalada);

                    // Crear un JLabel con el ImageIcon
                    JLabel labelImagen = new JLabel(imagenEscaladaIcon);

                    // Establecer el tamaño preferido del JLabel
                    labelImagen.setPreferredSize(new Dimension(nuevoAncho, nuevoAlto));

                    // Establecer el JLabel como el contenido del botón
                    buttonSeleccionarImagen.removeAll(); // Limpia cualquier componente previo del botón
                    buttonSeleccionarImagen.setLayout(new BorderLayout());
                    buttonSeleccionarImagen.add(labelImagen, BorderLayout.CENTER);
                } else {
                    // Si no hay ruta de imagen, establecer el texto del botón como el nombre del artículo
                    cajaImagen.setText(""); // Limpiar el JTextField
                    buttonSeleccionarImagen.setText(rs.getString("nombre"));
                    buttonSeleccionarImagen.setIcon(null);
                }
                
                
                comboCategoria.setSelectedItem(rs.getString("categoria").substring(0, 1).toUpperCase() + rs.getString("categoria").substring(1).toLowerCase());
                comboColor.setSelectedItem(rs.getString("color").substring(0, 1).toUpperCase() + rs.getString("color").substring(1).toLowerCase());
                comboEstado.setSelectedItem(rs.getString("estado").substring(0, 1).toUpperCase() + rs.getString("estado").substring(1).toLowerCase());
                cajaIdUsuarioReferenciado.setText(rs.getString("id_usuario"));
            } else {
                JOptionPane.showMessageDialog(null, "Artículo no encontrado");
                limpiarCaja();
            }
            
            conexion.close();
            
        }   catch(Exception ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cajaDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaDescripcionActionPerformed

    private void cajaBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaBuscarProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaBuscarProductoActionPerformed

    private void cajaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaNombreActionPerformed

    private void cajaPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaPrecioActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Conexion con = new Conexion();
            Connection conexion = con.getConnection();
            ps = conexion.prepareStatement("SELECT * FROM articulos WHERE id_articulo = ?");
            ps.setString(1, cajaBuscarProducto.getText());
            rs = ps.executeQuery();
            
            if(rs.next()) {
                String id = cajaBuscarProducto.getText();
                boolean confirmacion = ventanaDeSeleccion("¿Está seguro de eliminar el artículo N°" + id + "?");

                if(confirmacion) {
                    // Si el usuario seleccionó "Sí", procede con la eliminación
                    PreparedStatement ps = conexion.prepareStatement("DELETE FROM articulos WHERE id_articulo = ?");
                    ps.setString(1, cajaBuscarProducto.getText());

                    int resultado = ps.executeUpdate();

                    if (resultado > 0) {
                        JOptionPane.showMessageDialog(null, "Se eliminó el artículo exitosamente");
                        limpiarCaja();
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo eliminar el artículo");
                    }
                } else {
                    // El usuario seleccionó "No" o cerró la ventana de confirmación
                    System.out.println("Eliminación cancelada");
                }   
            } else {
                JOptionPane.showMessageDialog(null, "No se ingresó un ID de artículo");
            }

        conexion.close();
        } catch(Exception ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            Conexion con = new Conexion();
            Connection conexion = con.getConnection();
            
            if(!cajaBuscarProducto.getText().trim().isEmpty()) {
                if(!cajaNombre.getText().trim().isEmpty() && !cajaPrecio.getText().trim().isEmpty() && !cajaCantStock.getText().trim().isEmpty() && !buttonSeleccionarImagen.getText().trim().isEmpty()) {
                    ps = conexion.prepareStatement("UPDATE articulos SET nombre = ?, descripcion = ?, precio = ?, stock = ?, imagen = ?, categoria = ?, color = ?, estado = ?, id_usuario = ? WHERE id_articulo = ?");

                    ps.setString(1, cajaNombre.getText());
                    ps.setString(2, cajaDescripcion.getText());
                    ps.setString(3, cajaPrecio.getText());
                    ps.setString(4, cajaCantStock.getText());
                    ps.setString(5, buttonSeleccionarImagen.getText());
                    ps.setString(6, (String) comboCategoria.getSelectedItem());
                    ps.setString(7, (String) comboColor.getSelectedItem());
                    ps.setString(8, (String) comboEstado.getSelectedItem());
                    ps.setString(9, cajaIdUsuarioReferenciado.getText());
                    ps.setString(10, (String) cajaBuscarProducto.getText());

                    int resultado = ps.executeUpdate();

                    if(resultado > 0) {
                        JOptionPane.showMessageDialog(null, "Se modificó el artículo exitosamente");
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo modificar el artículo");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Complete los siguientes campos. (Nombre, Precio, Cant. Stock, Imagen)");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese el ID del artículo a modificar");
            }
            
            
            limpiarCaja();
            conexion.close();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            Conexion con = new Conexion();
            Connection conexion = con.getConnection();
            
            
            if(!cajaNombre.getText().trim().isEmpty() && !cajaPrecio.getText().trim().isEmpty() && !cajaCantStock.getText().trim().isEmpty() && !buttonSeleccionarImagen.getText().trim().isEmpty()) {
                ps = conexion.prepareStatement("INSERT INTO articulos(nombre, descripcion, precio, stock, imagen, categoria, color, estado, id_usuario) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)");
                
                ps.setString(1, cajaNombre.getText());
                ps.setString(2, cajaDescripcion.getText());
                ps.setString(3, cajaPrecio.getText());
                ps.setString(4, cajaCantStock.getText());
                ps.setString(5, buttonSeleccionarImagen.getText());
                ps.setString(6, (String) comboCategoria.getSelectedItem());
                ps.setString(7, (String) comboColor.getSelectedItem());
                ps.setString(8, (String) comboEstado.getSelectedItem());
                ps.setString(9, cajaIdUsuarioReferenciado.getText());

                int resultado = ps.executeUpdate();

                if(resultado > 0) {
                    JOptionPane.showMessageDialog(null, "Se agregó el artículo exitosamente");
                    limpiarCaja();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo agregar el artículo exitosamente");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Complete los siguientes campos. (Nombre, Precio, Cant. Stock, Imagen)");
            }
            
            
            limpiarCaja();
            conexion.close();
        } catch(Exception ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cajaIdUsuarioReferenciadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaIdUsuarioReferenciadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaIdUsuarioReferenciadoActionPerformed

    private void cajaCantStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaCantStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaCantStockActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        cajaBuscarProducto.setText(null);
        limpiarCaja();
    }//GEN-LAST:event_LimpiarActionPerformed

    private void buttonSeleccionarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeleccionarImagenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
    
        // Filtrar para que solo se muestren archivos de imagen (puedes ajustar los tipos de archivos según tus necesidades)
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de Imagen", "jpg", "jpeg", "png", "gif");
        fileChooser.setFileFilter(filter);

        int resultado = fileChooser.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();

            // Asegúrate de que el archivo seleccionado es una imagen
            if (esArchivoDeImagen(archivo)) {
                // Escala la imagen a una resolución más pequeña (ajusta según tus necesidades)
                ImageIcon imagenIcon = new ImageIcon(getScaledImage(archivo, 100, 100));

                // Muestra la imagen en un JLabel
                buttonSeleccionarImagen.setIcon(imagenIcon);

                // Muestra el título del archivo en algún lugar (puedes ajustar según tus necesidades)
                String tituloArchivo = archivo.getName();
                buttonSeleccionarImagen.setText(tituloArchivo);

                // También puedes almacenar la ruta del archivo en algún campo de texto, base de datos, etc.
                // cajaImagen.setText(archivo.getPath());
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, selecciona un archivo de imagen válido.");
            }
        }
    }//GEN-LAST:event_buttonSeleccionarImagenActionPerformed

    private void cajaImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaImagenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CMF_Engines_Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CMF_Engines_Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CMF_Engines_Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CMF_Engines_Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CMF_Engines_Add_Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton buttonSeleccionarImagen;
    private javax.swing.JTextField cajaBuscarProducto;
    private javax.swing.JTextField cajaCantStock;
    private javax.swing.JTextField cajaDescripcion;
    private javax.swing.JTextField cajaIdUsuarioReferenciado;
    private javax.swing.JTextField cajaImagen;
    private javax.swing.JTextField cajaNombre;
    private javax.swing.JTextField cajaPrecio;
    private javax.swing.JComboBox<String> comboCategoria;
    private javax.swing.JComboBox<String> comboColor;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
